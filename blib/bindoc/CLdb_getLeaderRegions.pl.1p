.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CLDB_GETLEADERREGIONS 1"
.TH CLDB_GETLEADERREGIONS 1 "2013-07-05" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
CLdb_getLeaderRegion.pl \-\- getting leader region sequences
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
CLdb_getLeaderRegion.pl [flags]
.SS "Required flags"
.IX Subsection "Required flags"
.IP "\-d 	CLdb database." 4
.IX Item "-d 	CLdb database."
.SS "options"
.IX Subsection "options"
.PD 0
.IP "\-l 	Maximum length of leader region (bp). [400]" 4
.IX Item "-l 	Maximum length of leader region (bp). [400]"
.IP "\-q 	sql to refine loci query (see \s-1EXAMPLES\s0)." 4
.IX Item "-q 	sql to refine loci query (see EXAMPLES)."
.IP "\-o 	Check for overlapping genes (& trim region if overlap)? [\s-1TRUE\s0]" 4
.IX Item "-o 	Check for overlapping genes (& trim region if overlap)? [TRUE]"
.IP "\-c 	Gene length cutoff for counting gene in overlap assessment (bp). [60]" 4
.IX Item "-c 	Gene length cutoff for counting gene in overlap assessment (bp). [60]"
.IP "\-v	Verbose output" 4
.IX Item "-v	Verbose output"
.IP "\-h	This help message" 4
.IX Item "-h	This help message"
.PD
.SS "For more information:"
.IX Subsection "For more information:"
perldoc CLdb_getLeaderRegions.pl
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Get the suspected leader regions for \s-1CRISPR\s0 loci 
in the \s-1CRISPR\s0 database.
.PP
Leader regions are determined by direct repeat (\s-1DR\s0) degeneracy,
which should occur at the trailer end.
For example: leader half has 1 cluster due to \s-1DR\s0 conservation,
while the trailer half has 3 clusters due to \s-1DR\s0 degeneracy). 
This is determined by the 'repeat_group' column in the 
Directrepeats table in the \s-1CRISPR\s0 database. Therefore, 
CLdb_groupArrayElements.pl has to be run on the database 
before running this script!
.PP
Both end regions of a \s-1CRISPR\s0 array are written if a \s-1CRISPR\s0
array has equal numbers of \s-1DR\s0 clusters on each half.
.PP
The default leader region length is 400bp from the \s-1CRISPR\s0 array.
.PP
The leader region length will be truncated if any genes overlap in 
that region.
.PP
Leader regions in the output fasta are named as: 
\&\*(L"cli.ID\*(R" \*(L"start|end\*(R"_\|_\*(L"region_start\*(R"_\|_\*(L"region_end\*(R"
.PP
Leader region start & end are according to the + strand.
.PP
The number of repeat_groups on each side (5' & 3') of the
\&\s-1CRISPR\s0 array will be printed to \s-1STDERR\s0 (unless '\-v'). 
The output values are: 'degeracies', 'locus_id', 
\&'5\-prime_number_repeat_groups', '3\-prime_number_repeat_groups'
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.SS "Leader regions for all loci"
.IX Subsection "Leader regions for all loci"
CLdb_getLeaderRegion.pl \-d \s-1CRISPR\s0.sqlite
.SS "Leader regions for just subtype I\-B (must have '\s-1AND\s0' in sql):"
.IX Subsection "Leader regions for just subtype I-B (must have 'AND' in sql):"
CLdb_getLeaderRegions.pl \-d \s-1CRISPR\s0.sqlite \-q \*(L"\s-1AND\s0 subtype='I\-B'\*(R" > leader_I\-B.fna
.SH "AUTHOR"
.IX Header "AUTHOR"
Nick Youngblut <nyoungb2@illinois.edu>
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
sharchaea.life.uiuc.edu:/home/git/CLdb/
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2010, 2011
This software is licensed under the terms of the GPLv3
