.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CLDB_PROTO2FASTA 1"
.TH CLDB_PROTO2FASTA 1 "2013-09-30" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
CLdb_proto2fasta.pl \-\- Make fasta of protospacers
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
CLdb_proto2fasta.pl [flags] > protospacers.fasta
.SS "Required flags"
.IX Subsection "Required flags"
.IP "\-database  <char>" 4
.IX Item "-database  <char>"
CLdb database.
.SS "options"
.IX Subsection "options"
.IP "\-subtype  <char>" 4
.IX Item "-subtype  <char>"
Refine query to specific a subtype(s) (>1 argument allowed).
.IP "\-taxon_id  <char>" 4
.IX Item "-taxon_id  <char>"
Refine query to specific a taxon_id(s) (>1 argument allowed).
.IP "\-taxon_name  <char>" 4
.IX Item "-taxon_name  <char>"
Refine query to specific a taxon_name(s) (>1 argument allowed).
.IP "\-staxon_id  <char>" 4
.IX Item "-staxon_id  <char>"
Refine query to specific a subject taxon_id(s) (>1 argument allowed).
.IP "\-staxon_name  <char>" 4
.IX Item "-staxon_name  <char>"
Refine query to specific a subject taxon_name(s) (>1 argument allowed).
.IP "\-saccession  <char>" 4
.IX Item "-saccession  <char>"
Refine query to specific a accession(s) (>1 argument allowed).
.IP "\-query  <char>" 4
.IX Item "-query  <char>"
Extra sql to refine the query.
.IP "\-length  <float>" 4
.IX Item "-length  <float>"
Length cutoff for blast hit (>=; fraction of spacer length). [1]
.IP "\-verbose  <bool>" 4
.IX Item "-verbose  <bool>"
Verbose output. [\s-1FALSE\s0]
.IP "\-help  <bool>" 4
.IX Item "-help  <bool>"
This help message
.SS "For more information:"
.IX Subsection "For more information:"
perldoc CLdb_proto2fasta.pl
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Make a fasta of all protospacers.
.ie n .SS "Sequence naming (separated by ""_\|_""):"
.el .SS "Sequence naming (separated by ``_\|_''):"
.IX Subsection "Sequence naming (separated by __):"
.IP "group_id" 4
.IX Item "group_id"
.PD 0
.IP "taxon_name" 4
.IX Item "taxon_name"
.IP "taxon_id" 4
.IX Item "taxon_id"
.IP "subtype" 4
.IX Item "subtype"
.IP "locus_id" 4
.IX Item "locus_id"
.IP "spacer_id" 4
.IX Item "spacer_id"
.IP "subject_taxon_id" 4
.IX Item "subject_taxon_id"
.IP "subject_taxon_name" 4
.IX Item "subject_taxon_name"
.IP "subject_accession" 4
.IX Item "subject_accession"
.PD
.SS "\s-1WARNING\s0!"
.IX Subsection "WARNING!"
Spacer blasting and \s-1DR\s0 filtering must be done prior!
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.SS "Fasta of all protospacers"
.IX Subsection "Fasta of all protospacers"
CLdb_proto2fasta.pl \-d CLdb.sqlite  > all_proto_mismatch.txt
.SS "Fasta of all protospacers in subtype I\-A"
.IX Subsection "Fasta of all protospacers in subtype I-A"
CLdb_proto2fasta.pl \-d CLdb.sqlite \-sub I\-A > I\-A_proto_mismatch.txt
.SH "AUTHOR"
.IX Header "AUTHOR"
Nick Youngblut <nyoungb2@illinois.edu>
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
sharchaea.life.uiuc.edu:/home/git/CLdb/
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2010, 2011
This software is licensed under the terms of the GPLv3
