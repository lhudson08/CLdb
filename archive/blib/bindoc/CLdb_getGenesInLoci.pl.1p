.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CLDB_GETGENESINLOCI 1"
.TH CLDB_GETGENESINLOCI 1 "2013-09-19" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
CLdb_getGenesInLoci.pl \-\- getting all genes in CRISPR Loci; output is a table of gene information
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
CLdb_getGenesInLoci.pl [flags]
.SS "Required flags"
.IX Subsection "Required flags"
.IP "\-database  <char>" 4
.IX Item "-database  <char>"
CLdb database.
.SS "Optional flags"
.IX Subsection "Optional flags"
.IP "\-exist  <bool>" 4
.IX Item "-exist  <bool>"
Do not write any genes already existing in the Genes table (unless '\-a' used). [\s-1TRUE\s0]
.IP "\-all  <bool>" 4
.IX Item "-all  <bool>"
All genes defined by the Loci table are written. 
Any existing entries written in place of new entry.
Not compatible with '\-c' [\s-1FALSE\s0]
.IP "\-conflict  <bool>" 4
.IX Item "-conflict  <bool>"
Just write out genes that are conflicting
(new and old versions). Not compatible with '\-a' [\s-1FALSE\s0]
.IP "\-sql  <char>" 4
.IX Item "-sql  <char>"
sql to refine loci table query (see \s-1EXAMPLES\s0).
.IP "\-quiet  <bool>" 4
.IX Item "-quiet  <bool>"
Turn off all warnings. [\s-1FALSE\s0]
.IP "\-verbose  <bool>" 4
.IX Item "-verbose  <bool>"
Verbose output. [\s-1TRUE\s0]
.IP "\-help  <bool>" 4
.IX Item "-help  <bool>"
This help message.
.SS "For more information:"
.IX Subsection "For more information:"
perldoc CLdb_getGenesInLoci.pl
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Get all \s-1CDS\s0 features from >= genbanks that fall
into \s-1CRISPR\s0 loci.
.PP
The output can be piped directly into
CLdb_loadGenes.pl or the aliases (or other values)
can be edited first.
.PP
Genbank files must be in \f(CW$CLdb_HOME\fR/genbank/
.SS "Existing genes in Genes table ('\-e', '\-a', '\-c')"
.IX Subsection "Existing genes in Genes table ('-e', '-a', '-c')"
By default, only new genes (ie. not found already in
Genes table) are written. This is to
preserve the existing alias values, which may 
have been manually editted.
.PP
All gene entries (new & existing) can be written
using '\-a'. To view conflicting gene entries,
use '\-c'. For '\-c', existing entries will have 'existing_entry'
in the 'Sequence' column.
.SS "In_Operon"
.IX Subsection "In_Operon"
Genes are designated as falling in the \s-1CAS\s0 operon
('In_Operon' field in \s-1DB\s0) if they fall inside
the designated operon range (designated in Loci table)
but not inside the \s-1CRISPR\s0 array range (also 
designated in Loci table).
.SS "\s-1WARNING:\s0"
.IX Subsection "WARNING:"
\&\s-1CDS\s0 features in genbanks must have db_xref tags with 
the fig|peg \s-1ID\s0 (example: \*(L"fig|6666666.40253.peg.2362\*(R");
otherwise, the \s-1CDS\s0 will not be written to the output table.
Extra information can come before 'fig' (eg. '\s-1ITEP:\s0' or '\s-1SEED:\s0'),
but it must end with a colon.
.SS "Requires:"
.IX Subsection "Requires:"
genbank_get_region.pl
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.SS "Basic usage:"
.IX Subsection "Basic usage:"
CLdb_getGenesInLoci.pl \-d \s-1CRISPR\s0.sqlite > gene_info.txt
.SS "Direct loading to \s-1CRISPR\s0 database"
.IX Subsection "Direct loading to CRISPR database"
CLdb_getGenesInLoci.pl \-d \s-1CRISPR\s0.sqlite | CLdb_loadGenes.pl \-d \s-1CRISPR\s0.sqlite
.SS "Refining query to just the 'I\-B' subtype"
.IX Subsection "Refining query to just the 'I-B' subtype"
CLdb_getGenesInLoci.pl \-d \s-1CRISPR\s0.sqlite \-s \*(L"\s-1WHERE\s0 subtype='I\-B'\*(R"
.SS "Refining query to just taxon '6666666.40253'"
.IX Subsection "Refining query to just taxon '6666666.40253'"
CLdb_getGenesInLoci.pl \-d \s-1CRISPR\s0.sqlite \-s \*(L"\s-1WHERE\s0 taxon_id='6666666.40253'\*(R"
.SS "Write out all entries (new & old; on conflict: old entry is written)"
.IX Subsection "Write out all entries (new & old; on conflict: old entry is written)"
CLdb_getGenesInLoci.pl \-d \s-1CRISPR\s0.sqlite \-a
.SS "Write out all conflicting entries"
.IX Subsection "Write out all conflicting entries"
CLdb_getGenesInLoci.pl \-d \s-1CRISPR\s0.sqlite \-c
.SH "AUTHOR"
.IX Header "AUTHOR"
Nick Youngblut <nyoungb2@illinois.edu>
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
sharchaea.life.uiuc.edu:/home/git/CLdb/
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2010, 2011
This software is licensed under the terms of the GPLv3
